<?xml version="1.0" encoding="UTF-8"?>

<!--  
   Copyright 2008 University of Rochester

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 -->

<!--
     This is the build file for ur_common_util
-->
<project name="ir_handle" xmlns:ivy="antlib:org.apache.ivy.ant" basedir=".">

    <!-- Use the build.properties file for user specific settings -->
    <property file="build.properties"/>
	
    <!-- project name -->
    <property name="project.name" value="ir_handle"/> 

    <!-- location of the base build file -->
    <property name="base.build.file" value="../base.xml"/>

	<!-- import the base set of files -->
    <import file="${base.build.file}"/>

    <!-- Allow users to see their properties and how they are set -->
    <target name="echo-properties" 
        description="Ouput the project properties for users when needed" >
	    <echo message="build.dir = ${build.dir}"/>
	    <echo message="src.dir = ${src.dir}"/>
	    <echo message="dist.dir = ${dist.dir}"/>
	    <echo message="test.dir = ${test.dir}"/>
	    <echo message="lib.dir = ${lib.dir}"/>
	    <echo message="project.name = ${project.name}"/>
	    <echo message="project.version = ${project.version}"/>
	    <echo message="dist.dir = ${dist.dir}"/>
	    <echo message="report.dir = ${report.dir}"/>
    	<echo message="produciton.config = ${properties.config.production}"/>
    </target>


    <!-- Set the location where the libraries this project is dependent -->
    <path id="libraries">
	  <fileset dir="${lib.dir}" includes="*.jar"/>
      <fileset dir="handle-jar" includes="*.jar"/>
    </path>

    <!-- This is the path for testing -->
	<path id="test.libraries">
		<path refid="libraries"/>
	
		<!-- compiled source files -->
		<pathelement location="${build.dir}/classes"/>
		
		<!-- test file configurations and properties -->
		<pathelement location="${testng.config}"/>
	</path>

    <!-- Copy non java resources -->
	<target name="copy-resources" description="-->Copy the non java resources into the build directory">
		<copy todir="${build.dir}/classes">
		    <fileset dir="${log4j.production.appender}"/>
	        <fileset dir="${spring.config.common.config}"/>
	        <fileset dir="${spring.project.config}"/>
	        <fileset dir="${properties.config.production}"/>
		</copy>
	</target>

	<!-- compile the java source files -->
    <target name="build" depends="retrieve, copy-resources" xmlns:ext="http://edu.ur/d1/ext">
        <mkdir dir="${build.dir}/classes"/>
        <ext:javac srcdir="${src.dir}"
			 destdir="${build.dir}/classes"
			 classpathref="libraries"/>
    </target>

	<!-- clean up the build directories -->
    <target name="clean" description="-->Clean the project">
        <delete dir="${build.dir}"/>
        <delete dir="${report.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>
	
	<!-- clean up the build directories plus lib directory -->
    <target name="full-clean" depends="clean" description="-->Clean the project and lib directory">
        <delete dir="${lib.dir}"/>
    	<delete dir="${ivy.dir}"/>
    </target>	

	
    <!-- build the test class files of the project -->
    <target name="test-build" depends="build" description="-->Compile the test classes"
    xmlns:ext="http://edu.ur/d1/ext">
        <ext:javac srcdir="${test.dir}"
			 destdir="${build.dir}/classes"
			 classpathref="libraries"/>
    </target>

	
    <!-- this target runs the tests - the default is NOT to run the tests -->
	<target name="test" depends="test-build" if="run.tests" description="-->Run the tests">
		
	</target>

    <!-- generate the documentation -->
    <target name="docs" description="-->build the javadocs">
        <mkdir dir="${dist.dir}/docs"/>
		<javadoc
	           destdir="${dist.dir}/docs/api"
	           author="true"
	           version="true"
	           use="true"
	           windowtitle="University of Rochester File Database API">

			<fileset dir="${src.dir}" defaultexcludes="yes">
				<include name="edu/ur/**"/>
			</fileset>

			<doctitle><![CDATA[<h1>University of Rochester Libraries File Database API</h1>]]></doctitle>
		    <bottom>
			<![CDATA[<i>Copyright &#169; 2006 University of Rochester Libraries</i>]]></bottom>
	       <tag name="todo" scope="all" description="To do:"/>
	       <link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
        </javadoc>
    </target>

    <!-- generate a distribution jar file -->
    <target name="dist" depends="test" description="-->generate a distribution jar file">
        <mkdir dir="${dist.dir}"/>
		<!-- Put everything in ${build} into the {project.name}-version.jar file -->
		<jar jarfile="${dist.dir}/${project.name}-${project.version}.jar"
			basedir="${build.dir}/classes"
			excludes="**/*Test.class"/>
    </target>
	
	<!-- publish the distribution jar file to the local repository -->
	<target name="publish-local" depends="dist" description="-->publishes the jar file to the local ivy repository">
		<ivy:publish resolver="local" pubrevision="${project.version}" overwrite="true">
		   <artifacts pattern="${dist.dir}/${project.name}-${project.version}.[ext]" />
		</ivy:publish>
	</target>

	
   

</project>
